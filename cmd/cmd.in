#####################################################
#                                                   #
#                                                   #
#                         #
#                                                   #
# The methodology outlined here follows that from   #
# Hossain, Tschopp, et al. 2010, Polymer.  Please   #
# cite accordingly. The following script requires   #
# a LAMMPS data file containing the coordinates and #
# appropriate bond/angle/dihedral lists for each    #
# united atom.                                      #
#                                                   #
# Execute the script through:                       #
# lmp_exe < in.deform.polychain.txt                 #
#                                                   #
#####################################################
#package gpu 1 split -1
# VARIABLES
variable input index lmpdat
variable simname index out
# Initialization
units		lj 
boundary	p p p
atom_style	bond
log 		${simname}.txt
read_data	${input}

# Dreiding potential information
neighbor	0.4 bin
neigh_modify delay 0 every 1 check yes # technical tweaking
bond_style   harmonic
#bond_coeff   1 20 2.0 1.0 1.0 #fene
bond_coeff	1 40 1.1
special_bonds fene


pair_style	lj/cut 2.5 

pair_coeff 1 *  1.0  1.0	#A

group chain type 1 # group chain atoms to calculate Rg
compute radg chain gyration # Rg calculation

compute eng all pe/atom 
compute eatoms all reduce sum c_eng 

#Minimization 
fix 1 chain nvt temp 1 1 100.0

thermo 100
thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms
min_style cg
minimize  0 1.0e-9 5000 10000
compute csym chain centro/atom fcc
compute peratom chain pe/atom

unfix 1
 

#####################################################
# Equilibration (Langevin dynamics at 300 K)
dump      1 all atom 10000 ${simname}.lammpstrj

velocity 	all create 1.0 1231 

fix	1 all nvt temp 1.0 1.0 100.0 
fix 2 all momentum 100 linear 1 1 1 angular 

thermo_style	custom step temp etotal evdwl c_radg
thermo		1000
run		 500000 

unfix	1
unfix 2

write_data 	restart
clear
print "All done"

